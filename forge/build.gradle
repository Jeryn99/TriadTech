plugins {
    id 'com.github.johnrengelman.shadow'
}

loom {
    forge {
        mixinConfig "triadtech.mixins.json"

        runConfigs.configureEach {
            if (name == "client") {
                runDir = "../run"

                if (System.getenv('MC_USERNAME') && System.getenv('MC_UUID') && System.getenv('MC_ACCESS_TOKEN')) {
                    programArgs '--username', System.getenv('MC_USERNAME'), '--uuid', System.getenv('MC_UUID'), '--accessToken', System.getenv('MC_ACCESS_TOKEN')
                }
            } else if (name == "server") {
                runDir = "../run/server-forge"
            } else if (name == "data") {
                programArgs '--existing', project(":common").file("src/main/resources/").absolutePath
            }
        }

        dataGen {
            mod "triadtech"
        }
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"
    modImplementation "maven.modrinth:tardis-refined:$rootProject.tardis_refined_version+forge"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
    archiveClassifier = "forge"
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_name + "-" + project.name
            from components.java
        }
    }

    repositories {
        maven {
            url 'https://maven.threetag.net'
            credentials {
                username System.getenv('MAVEN_USERNAME')
                password System.getenv('MAVEN_PASSWORD')
            }
        }
    }
}